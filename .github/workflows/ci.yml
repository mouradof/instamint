name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and run Docker Compose services
      run: docker-compose up --build -d

    - name: Wait for services to be ready
      run: |
        retries=10
        while [ $retries -gt 0 ]; do
          if docker-compose exec -T instamint-frontend curl -s http://localhost:3000; then
            echo "Frontend is up!"
            break
          fi
          if docker-compose exec -T api-user curl -s http://localhost:4000; then
            echo "API User is up!"
            break
          fi
          echo "Waiting for services to be ready..."
          retries=$((retries - 1))
          sleep 10
        done

    - name: Run code format check
      run: docker-compose exec -T instamint-frontend npm run format

    - name: Run code lint fix
      run: docker-compose exec -T instamint-frontend npm run lint:fix

    - name: Run frontend tests
      run: docker-compose exec -T instamint-frontend npm test

    - name: Run API User tests
      run: docker-compose exec -T api-user npm test

    - name: Run API Relation tests
      run: docker-compose exec -T api-relation npm test

    - name: Run API Post tests
      run: docker-compose exec -T api-post npm test

    - name: Run API Notification tests
      run: docker-compose exec -T api-notification npm test

    - name: Run API NFT tests
      run: docker-compose exec -T api-nft npm test

    - name: Shut down Docker Compose services
      run: docker-compose down